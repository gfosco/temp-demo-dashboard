/*
 * This file is part of the nivo project.
 *
 * (c) 2016 RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _d = require('d3');

var computePath = function computePath(node) {};

/**
 * This wrapper is responsible for computing bubble chart positions.
 * It's used for all Bubble related chart components.
 *
 * @returns {{ compute: (function) }}
 * @constructor
 */
var BubbleHelper = function BubbleHelper() {
    var pack = (0, _d.pack)();

    return {
        /**
         *
         * @param {number}   width
         * @param {number}   height
         * @param {object}   _root
         * @param {boolean}  leavesOnly
         * @param {function} identity
         * @param {function} value
         * @param {number}   padding
         * @param {function} color
         * @returns {array}
         */
        compute: function compute(_ref) {
            var width = _ref.width,
                height = _ref.height,
                _root = _ref.root,
                leavesOnly = _ref.leavesOnly,
                identity = _ref.identity,
                value = _ref.value,
                padding = _ref.padding,
                color = _ref.color;

            pack.size([width, height]).padding(padding);

            var root = (0, _d.hierarchy)(_root).sum(value);

            pack(root);

            var nodes = leavesOnly ? root.leaves() : root.descendants();

            return nodes.map(function (d) {
                d.color = color(d.depth);
                /*
                 if (d.depth > 1) {
                 d.color = color(d.parentId)
                 } else {
                 d.color = color(identity(d.data))
                 }
                 */

                d.data.key = d.ancestors().map(function (a) {
                    return identity(a.data);
                }).join('.');

                return d;
            });
        }
    };
};

exports.default = BubbleHelper;