/*
 * This file is part of the nivo project.
 *
 * (c) RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _DataUtils = require('../../../DataUtils');

/**
 * This wrapper is responsible for computing stack chart positions.
 * It's used for all Stack related chart components.
 *
 * @returns {{ compute: (function) }}
 * @constructor
 */
var StackD3 = function StackD3() {
    var layout = d3.layout.pack();

    return {
        /**
         *
         * @param {number}   width
         * @param {number}   height
         * @param {object}   data
         * @param {string}   identityProperty
         * @param {function} valueAccessor
         * @param {number}   padding
         * @param {function} color
         * @returns {array}
         */
        compute: function compute(_ref) {
            var width = _ref.width,
                height = _ref.height,
                data = _ref.data,
                identityProperty = _ref.identityProperty,
                valueAccessor = _ref.valueAccessor,
                padding = _ref.padding,
                color = _ref.color;

            layout.value(valueAccessor).sort(null).size([width, height]).padding(padding);

            var flattened = (0, _DataUtils.flatten)(data, identityProperty);
            var nodes = layout.nodes(flattened).filter(function (d) {
                return !d.children;
            }).map(function (d) {
                d.color = color(d.parentId);

                return d;
            });

            return nodes;
        }
    };
};

exports.default = StackD3;