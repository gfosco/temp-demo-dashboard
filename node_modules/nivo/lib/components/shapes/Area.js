/*
 * This file is part of the nivo project.
 *
 * (c) RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

var _Nivo = require('../../Nivo');

var _Nivo2 = _interopRequireDefault(_Nivo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Area = function (_Component) {
    _inherits(Area, _Component);

    function Area() {
        _classCallCheck(this, Area);

        return _possibleConstructorReturn(this, (Area.__proto__ || Object.getPrototypeOf(Area)).apply(this, arguments));
    }

    _createClass(Area, [{
        key: 'renderD3',
        value: function renderD3(props) {
            var data = props.data,
                xScale = props.xScale,
                yScale = props.yScale,
                xAccessor = props.xAccessor,
                yAccessor = props.yAccessor,
                width = props.width,
                height = props.height,
                interpolation = props.interpolation,
                transitionDuration = props.transitionDuration,
                transitionEasing = props.transitionEasing;


            var element = _d2.default.select((0, _reactDom.findDOMNode)(this));

            var area = _d2.default.svg.area().x(function (d, i) {
                return xScale(xAccessor(d, i));
            }).y0(height).y1(function (d, i) {
                return yScale(yAccessor(d, i));
            }).interpolate(interpolation);

            element.datum(data).transition().duration(transitionDuration).ease(transitionEasing).attr('d', area);
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.renderD3(this.props);
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
            this.renderD3(nextProps);

            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement('path', { className: 'chart__shape__area' });
        }
    }]);

    return Area;
}(_react.Component);

Area.displayName = 'Area';

var array = _react.PropTypes.array,
    func = _react.PropTypes.func,
    string = _react.PropTypes.string,
    number = _react.PropTypes.number;


Area.propTypes = {
    data: array.isRequired,
    xScale: func.isRequired,
    yScale: func.isRequired,
    xAccessor: func.isRequired,
    yAccessor: func.isRequired,
    width: number.isRequired,
    height: number.isRequired,
    interpolation: string.isRequired,
    transitionDuration: number.isRequired,
    transitionEasing: string.isRequired
};

Area.defaultProps = {
    xAccessor: function xAccessor(d, i) {
        return i;
    },
    yAccessor: function yAccessor(d) {
        return d;
    },
    interpolation: 'linear',
    transitionDuration: _Nivo2.default.defaults.transitionDuration,
    transitionEasing: _Nivo2.default.defaults.transitionEasing
};

exports.default = Area;