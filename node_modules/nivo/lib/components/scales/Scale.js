/*
 * This file is part of the nivo project.
 *
 * (c) RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d = require('d3');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Scale = function (_Component) {
    _inherits(Scale, _Component);

    function Scale() {
        _classCallCheck(this, Scale);

        return _possibleConstructorReturn(this, (Scale.__proto__ || Object.getPrototypeOf(Scale)).apply(this, arguments));
    }

    _createClass(Scale, [{
        key: 'render',
        value: function render() {
            return null;
        }
    }], [{
        key: 'create',
        value: function create(_ref, data, width, height) {
            var type = _ref.type,
                axis = _ref.axis,
                key = _ref.dataKey,
                padding = _ref.padding;

            var mapper = _.isFunction(key) ? key : function (d) {
                return d[key];
            };

            var range = [axis === 'y' ? height : 0, axis === 'x' ? width : 0];

            var scale = void 0;
            switch (type) {
                case 'linear':
                    scale = (0, _d.scaleLinear)().rangeRound(range).domain([0, (0, _d.max)(data.map(mapper))]);
                    break;

                case 'band':
                    scale = (0, _d.scaleBand)().rangeRound(range).domain(data.map(mapper));

                    if (padding !== undefined) {
                        scale.padding(padding);
                    }
                    break;

                case 'point':
                    scale = (0, _d.scalePoint)().range(range).domain(data.map(mapper));
                    break;
            }

            return scale;
        }
    }]);

    return Scale;
}(_react.Component);

Scale.propTypes = {
    id: _react.PropTypes.string.isRequired,
    type: _react.PropTypes.oneOf(['linear', 'point', 'band']).isRequired,
    dataKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]).isRequired
};
exports.default = Scale;