/*
 * This file is part of the nivo project.
 *
 * (c) Raphaël Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Nivo = require('../../../Nivo');

var _Nivo2 = _interopRequireDefault(_Nivo);

var _PropTypes = require('../../../PropTypes');

var _ColorUtils = require('../../../ColorUtils');

var _decoratorsFromReactChildren = require('../../../lib/decoratorsFromReactChildren');

var _decoratorsFromReactChildren2 = _interopRequireDefault(_decoratorsFromReactChildren);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var findPrecedingLayer = function findPrecedingLayer(layers, index) {
    if (layers === null) {
        return null;
    }

    for (var i = layers.length - 1; i >= 0; i--) {
        var layer = layers[i];
        if (layer.index < index) {
            return layer;
        }
    }

    return null;
};

var Stack = function (_Component) {
    _inherits(Stack, _Component);

    function Stack(props) {
        _classCallCheck(this, Stack);

        var _this = _possibleConstructorReturn(this, (Stack.__proto__ || Object.getPrototypeOf(Stack)).call(this, props));

        _this.state = {
            excludeLayers: []
        };

        _this.previousData = null;
        return _this;
    }

    _createClass(Stack, [{
        key: 'renderD3',
        value: function renderD3(props, state) {
            var _this2 = this;

            var data = props.data,
                offset = props.offset,
                interpolation = props.interpolation,
                colors = props.colors,
                overColor = props.overColor,
                transitionDuration = props.transitionDuration,
                transitionEasing = props.transitionEasing;
            var excludeLayers = state.excludeLayers;


            var overColorFn = (0, _ColorUtils.getColorGenerator)(overColor);

            var element = _d2.default.select((0, _reactDom.findDOMNode)(this));
            var wrapper = element.select('.nivo_stack_wrapper');

            var margin = _lodash2.default.assign({}, _Nivo2.default.defaults.margin, props.margin);
            var width = props.width - margin.left - margin.right;
            var height = props.height - margin.top - margin.bottom;

            element.attr({
                width: props.width,
                height: props.height
            });
            wrapper.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

            var color = (0, _ColorUtils.getColorRange)(colors);

            var normData = _lodash2.default.cloneDeep(data).map(function (values, i) {
                return {
                    index: i,
                    color: color(i),
                    values: values
                };
            });

            var filteredData = [];
            var hiddenData = [];
            if (excludeLayers.length > 0) {
                normData.forEach(function (layer) {
                    if (excludeLayers.indexOf(layer.index) === -1) {
                        filteredData.push(layer);
                    } else {
                        hiddenData.push(layer);
                    }
                });
            } else {
                filteredData = normData;
            }

            var stack = _d2.default.layout.stack().offset(offset).values(function (d) {
                return d.values;
            });

            var stacked = stack(filteredData);

            var xScale = _d2.default.scale.linear().range([0, width]).domain([0, stacked[0].values.length - 1]);

            var yScale = _d2.default.scale.linear().range([height, 0]).domain([0, _d2.default.max(stacked, function (layer) {
                return _d2.default.max(layer.values, function (d) {
                    return d.y0 + d.y;
                });
            })]);

            filteredData = filteredData.map(function (layer) {
                return _lodash2.default.assign(layer, {
                    values: layer.values.map(function (v) {
                        return {
                            value: v,
                            interpolated: {
                                x: xScale(v.x),
                                y0: yScale(v.y0),
                                y: yScale(v.y0 + v.y)
                            }
                        };
                    })
                });
            });

            var area = _d2.default.svg.area().interpolate(interpolation).x(function (d) {
                return d.x;
            }).y0(function (d) {
                return d.y0;
            }).y1(function (d) {
                return d.y;
            });

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Areas
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            var paths = wrapper.select('.nivo_stack_areas').selectAll('.nivo_stack_area').data(stacked, function (d) {
                return d.index;
            });

            // ENTER
            paths.enter().append('path').attr('class', 'nivo_stack_area').attr('d', function (d) {
                if (_this2.previousData === null) {
                    return area(d.values.map(function (p) {
                        return {
                            x: p.interpolated.x,
                            y0: yScale.range()[0],
                            y: yScale.range()[0]
                        };
                    }));
                }

                var precedingLayer = findPrecedingLayer(_this2.previousData, d.index);

                if (precedingLayer !== null) {
                    return area(precedingLayer.values.map(function (p) {
                        return {
                            x: p.interpolated.x,
                            y0: p.interpolated.y,
                            y: p.interpolated.y
                        };
                    }));
                }

                return area(d.values.map(function (p) {
                    return {
                        x: p.interpolated.x,
                        y0: p.interpolated.y0,
                        y: p.interpolated.y0
                    };
                }));
            }).style('fill', function (d) {
                return d.color;
            });

            // UPDATE
            paths.on('click', function (d) {
                // we cannot have no layer
                if (filteredData.length > 1) {
                    _this2.setState({ excludeLayers: excludeLayers.concat([d.index]) });
                }
            }).on('mouseover', function (d) {
                _d2.default.select(this).style('fill', overColorFn);
            }).on('mousemove', function (d, i) {
                _d2.default.select(this).style('fill', overColorFn);
            }).on('mouseout', function (d) {
                _d2.default.select(this).style('fill', d.color);
            }).transition().duration(transitionDuration).ease(transitionEasing).attr('d', function (d) {
                return area(d.values.map(function (v) {
                    return v.interpolated;
                }));
            }).style('fill', function (d) {
                return d.color;
            });

            // EXIT
            paths.exit().transition().duration(transitionDuration).ease(transitionEasing).attr('d', function (d) {
                var precedingLayer = findPrecedingLayer(filteredData, d.index);

                if (precedingLayer !== null) {
                    return area(precedingLayer.values.map(function (p) {
                        return {
                            x: p.interpolated.x,
                            y0: p.interpolated.y,
                            y: p.interpolated.y
                        };
                    }));
                }

                return area(d.values.map(function (p) {
                    return {
                        x: p.interpolated.x,
                        y0: p.interpolated.y0,
                        y: p.interpolated.y0
                    };
                }));
            }).remove();

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Hidden layers
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            var hiddenControls = wrapper.selectAll('.nivo_stack_hidden_control').data(hiddenData, function (d) {
                return d.index;
            });

            // ENTER
            hiddenControls.enter().append('circle').attr('class', 'nivo_stack_hidden_control').attr('r', 8).attr('transform', function (d, i) {
                return 'translate(' + i * 40 + ',0)';
            }).style('fill', function (d) {
                return d.color;
            }).style('opacity', 0).style('cursor', 'pointer');

            hiddenControls.on('click', function (d) {
                _this2.setState({ excludeLayers: excludeLayers.filter(function (index) {
                        return index !== d.index;
                    }) });
            }).transition().duration(transitionDuration).ease(transitionEasing).attr('transform', function (d, i) {
                return 'translate(' + i * 40 + ',0)';
            }).style('fill', function (d) {
                return d.color;
            }).style('opacity', 1);

            hiddenControls.exit().transition().duration(transitionDuration).ease(transitionEasing).style('opacity', 0).remove();

            var stackContext = {
                element: element, wrapper: wrapper,
                width: width, height: height,
                stacked: stacked,
                xScale: xScale, yScale: yScale,
                transitionDuration: transitionDuration, transitionEasing: transitionEasing
            };

            this.decorators.forEach(function (decorator) {
                decorator(stackContext);
            });

            this.previousData = filteredData;
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            this.decorators = (0, _decoratorsFromReactChildren2.default)(nextProps.children, 'decorateStack');

            this.renderD3(nextProps, nextState);

            return false;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.decorators = (0, _decoratorsFromReactChildren2.default)(this.props.children, 'decorateStack');

            this.renderD3(this.props, this.state);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'svg',
                { ref: 'svg', className: 'nivo_stack' },
                _react2.default.createElement(
                    'g',
                    { className: 'nivo_stack_wrapper' },
                    _react2.default.createElement('g', { className: 'nivo_stack_areas' })
                )
            );
        }
    }]);

    return Stack;
}(_react.Component);

var array = _react.PropTypes.array,
    number = _react.PropTypes.number,
    string = _react.PropTypes.string,
    func = _react.PropTypes.func,
    any = _react.PropTypes.any,
    oneOf = _react.PropTypes.oneOf;


Stack.propTypes = {
    width: number.isRequired,
    height: number.isRequired,
    margin: _PropTypes.margin,
    sort: func,
    data: array.isRequired,
    offset: oneOf(['silhouette', 'wiggle', 'expand', 'zero']).isRequired,
    keyProp: string.isRequired,
    valueProp: string.isRequired,
    interpolation: _PropTypes.lineInterpolation,
    colors: any.isRequired,
    overColor: any.isRequired,
    transitionDuration: number.isRequired,
    transitionEasing: string.isRequired
};

Stack.defaultProps = {
    margin: _Nivo2.default.defaults.margin,
    sort: null,
    offset: 'zero',
    keyProp: 'label',
    valueProp: 'value',
    interpolation: 'monotone',
    transitionDuration: _Nivo2.default.defaults.transitionDuration,
    transitionEasing: _Nivo2.default.defaults.transitionEasing,
    colors: _Nivo2.default.defaults.colorRange,
    overColor: 'inherit:brighter(.5)'
};

exports.default = Stack;