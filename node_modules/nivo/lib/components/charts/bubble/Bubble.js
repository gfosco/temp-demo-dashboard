/*
 * This file is part of the nivo project.
 *
 * (c) 2016 RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _propertiesConverters = require('../../../lib/propertiesConverters');

var _BubbleProps = require('./BubbleProps');

var _BubblePlaceholders = require('./BubblePlaceholders');

var _BubblePlaceholders2 = _interopRequireDefault(_BubblePlaceholders);

var _ColorUtils = require('../../../ColorUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createNodes = function createNodes(_ref) {
    var borderWidth = _ref.borderWidth,
        borderColor = _ref.borderColor,
        enableLabel = _ref.enableLabel,
        _label = _ref.label,
        labelFormat = _ref.labelFormat,
        labelSkipRadius = _ref.labelSkipRadius,
        labelTextColor = _ref.labelTextColor,
        labelTextDY = _ref.labelTextDY;

    var label = (0, _propertiesConverters.convertLabel)(_label, labelFormat);
    var borderColorFn = (0, _ColorUtils.getColorGenerator)(borderColor);
    var textColorFn = (0, _ColorUtils.getColorGenerator)(labelTextColor);

    return function (nodes) {
        var renderedNodes = [];

        nodes.filter(function (node) {
            return node.style.r > 0;
        }).forEach(function (node) {
            renderedNodes.push(_react2.default.createElement('circle', {
                key: node.key + '.circle',
                r: node.style.r,
                className: 'nivo_bubble_node',
                transform: 'translate(' + node.style.x + ',' + node.style.y + ')',
                style: {
                    fill: node.style.color,
                    stroke: borderColorFn(node.style),
                    strokeWidth: borderWidth
                }
            }));
        });

        if (enableLabel === true) {
            nodes.filter(function (node) {
                return node.data.height === 0 && (labelSkipRadius === 0 || node.data.r >= labelSkipRadius);
            }).forEach(function (node) {
                renderedNodes.push(_react2.default.createElement(
                    'text',
                    {
                        key: node.key + '.text',
                        className: 'nivo_bubble_legend',
                        transform: 'translate(' + node.style.x + ',' + node.style.y + ')',
                        textAnchor: 'middle',
                        dy: labelTextDY,
                        style: {
                            fill: textColorFn(node.style)
                        }
                    },
                    label(node.data.data)
                ));
            });
        }

        return renderedNodes;
    };
};

var Bubble = function (_Component) {
    _inherits(Bubble, _Component);

    function Bubble() {
        _classCallCheck(this, Bubble);

        return _possibleConstructorReturn(this, (Bubble.__proto__ || Object.getPrototypeOf(Bubble)).apply(this, arguments));
    }

    _createClass(Bubble, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _BubblePlaceholders2.default,
                _extends({}, this.props, {
                    namespace: 'svg'
                }),
                createNodes(this.props)
            );
        }
    }]);

    return Bubble;
}(_react.Component);

Bubble.propTypes = _lodash2.default.omit(_BubbleProps.bubblePropTypes, ['children', 'namespace', 'transitionDuration', 'transitionEasing']);

Bubble.defaultProps = _lodash2.default.omit(_BubbleProps.bubbleDefaultProps, ['namespace', 'transitionDuration', 'transitionEasing']);

exports.default = Bubble;