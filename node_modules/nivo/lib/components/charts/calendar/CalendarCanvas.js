/*
 * This file is part of the nivo project.
 *
 * (c) RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Nivo = require('../../../Nivo');

var _Nivo2 = _interopRequireDefault(_Nivo);

var _CalendarLayout = require('../../../lib/charts/calendar/CalendarLayout');

var _CalendarLayout2 = _interopRequireDefault(_CalendarLayout);

var _CalendarProps = require('./CalendarProps');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var color = _d2.default.scale.category20b();

var CalendarCanvas = function (_Component) {
    _inherits(CalendarCanvas, _Component);

    function CalendarCanvas(props) {
        _classCallCheck(this, CalendarCanvas);

        return _possibleConstructorReturn(this, (CalendarCanvas.__proto__ || Object.getPrototypeOf(CalendarCanvas)).call(this, props));
    }

    _createClass(CalendarCanvas, [{
        key: 'renderD3',
        value: function renderD3(props) {
            var from = props.from,
                to = props.to,
                direction = props.direction,
                yearSpacing = props.yearSpacing,
                daySpacing = props.daySpacing,
                dayBorderWidth = props.dayBorderWidth,
                dayBorderColor = props.dayBorderColor,
                monthBorderWidth = props.monthBorderWidth,
                monthBorderColor = props.monthBorderColor,
                transitionDuration = props.transitionDuration,
                transitionEasing = props.transitionEasing,
                transitionStaggering = props.transitionStaggering;


            var canvas = _d2.default.select((0, _reactDom.findDOMNode)(this));
            canvas.attr({
                width: props.width,
                height: props.height
            });

            var margin = _lodash2.default.assign({}, _Nivo2.default.defaults.margin, props.margin);
            var width = props.width - margin.left - margin.right;
            var height = props.height - margin.top - margin.bottom;

            var _calendarLayout$compu = this.calendarLayout.compute({
                width: width, height: height,
                from: from, to: to,
                direction: direction,
                yearSpacing: yearSpacing,
                daySpacing: daySpacing
            }),
                days = _calendarLayout$compu.days,
                months = _calendarLayout$compu.months;

            var dayNodes = this.container.selectAll('custom.rect').data(days, function (d) {
                return d.date;
            });

            dayNodes.enter().append('custom').classed('rect', true).attr('x', 0).attr('y', 0).attr('size', function (d) {
                return d.size;
            }).attr('fillStyle', function (d) {
                return color(d.date.getFullYear() + '.' + d.date.getMonth());
            }).attr('strokeStyle', dayBorderColor).attr('lineWidth', dayBorderWidth);

            dayNodes.transition().duration(transitionDuration).ease(transitionEasing).delay(function (d) {
                return _d2.default.time.dayOfYear(d.date) * transitionStaggering;
            }).attr('x', function (d) {
                return d.x;
            }).attr('y', function (d) {
                return d.y;
            }).attr('size', function (d) {
                return d.size;
            }).attr('fillStyle', function (d) {
                return color(d.date.getFullYear() + '.' + d.date.getMonth());
            }).attr('strokeStyle', dayBorderColor).attr('lineWidth', dayBorderWidth);
        }
    }, {
        key: 'drawCanvas',
        value: function drawCanvas() {
            var ctx = this.context;

            var canvas = _d2.default.select((0, _reactDom.findDOMNode)(this));

            ctx.fillStyle = '#fff';
            ctx.rect(0, 0, canvas.attr('width'), canvas.attr('height'));
            ctx.fill();

            var days = this.container.selectAll('custom.rect');

            days.each(function (d) {
                var node = _d2.default.select(this);

                ctx.beginPath();
                ctx.fillStyle = node.attr('fillStyle');
                ctx.strokeStyle = node.attr('strokeStyle');
                ctx.lineWidth = node.attr('lineWidth');
                ctx.rect(node.attr('x'), node.attr('y'), node.attr('size'), node.attr('size'));
                ctx.fill();
                ctx.stroke();
                ctx.closePath();
            });

            //console.log(days);
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.calendarLayout = (0, _CalendarLayout2.default)();
            this.virtualContainer = document.createElement('custom');
            this.container = _d2.default.select(this.virtualContainer);

            _d2.default.timer(this.drawCanvas.bind(this));
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            this.renderD3(nextProps, nextState);

            return false;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.canvas = (0, _reactDom.findDOMNode)(this);
            this.context = this.canvas.getContext('2d');

            this.renderD3(this.props, this.state);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement('canvas', { className: 'nivo_calendar_canvas' });
        }
    }]);

    return CalendarCanvas;
}(_react.Component);

CalendarCanvas.propTypes = _lodash2.default.omit(_CalendarProps.calendarPropTypes, ['motionStiffness', 'motionDamping']);

CalendarCanvas.defaultProps = _lodash2.default.omit(_CalendarProps.calendarDefaultProps, ['motionStiffness', 'motionDamping']);

exports.default = CalendarCanvas;