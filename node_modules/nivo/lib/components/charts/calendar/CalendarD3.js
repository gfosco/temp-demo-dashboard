/*
 * This file is part of the nivo project.
 *
 * (c) Raphaël Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _Nivo = require('../../../Nivo');

var _Nivo2 = _interopRequireDefault(_Nivo);

var _CalendarLayout = require('../../../lib/charts/calendar/CalendarLayout');

var _CalendarLayout2 = _interopRequireDefault(_CalendarLayout);

var _CalendarProps = require('./CalendarProps');

var _directions = require('../../../constants/directions');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CalendarD3 = function (_Component) {
    _inherits(CalendarD3, _Component);

    function CalendarD3(props) {
        _classCallCheck(this, CalendarD3);

        return _possibleConstructorReturn(this, (CalendarD3.__proto__ || Object.getPrototypeOf(CalendarD3)).call(this, props));
    }

    _createClass(CalendarD3, [{
        key: 'renderD3',
        value: function renderD3(props) {
            var from = props.from,
                to = props.to,
                data = props.data,
                onDayClick = props.onDayClick,
                direction = props.direction,
                colorScale = props.colorScale,
                emptyColor = props.emptyColor,
                yearSpacing = props.yearSpacing,
                yearLegendOffset = props.yearLegendOffset,
                daySpacing = props.daySpacing,
                dayBorderWidth = props.dayBorderWidth,
                dayBorderColor = props.dayBorderColor,
                monthBorderWidth = props.monthBorderWidth,
                monthBorderColor = props.monthBorderColor,
                monthLegendOffset = props.monthLegendOffset,
                transitionDuration = props.transitionDuration,
                transitionEasing = props.transitionEasing,
                transitionStaggering = props.transitionStaggering;


            var element = _d2.default.select((0, _reactDom.findDOMNode)(this));
            var wrapper = element.select('.nivo_calendar_wrapper');

            var margin = _lodash2.default.assign({}, _Nivo2.default.defaults.margin, props.margin);
            var width = props.width - margin.left - margin.right;
            var height = props.height - margin.top - margin.bottom;

            element.select('.debug').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')').attr({ width: width, height: height });

            element.attr({
                width: props.width,
                height: props.height
            });
            wrapper.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

            var _calendarLayout$compu = this.calendarLayout.compute({
                width: width, height: height,
                from: from, to: to,
                data: data,
                direction: direction,
                colorScale: colorScale,
                emptyColor: emptyColor,
                yearSpacing: yearSpacing,
                daySpacing: daySpacing
            }),
                years = _calendarLayout$compu.years,
                months = _calendarLayout$compu.months,
                days = _calendarLayout$compu.days;

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Days
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————


            var dayNodes = wrapper.selectAll('.nivo_calendar_day').data(days, function (d) {
                return d.date;
            });

            dayNodes.enter().append('rect').attr('class', function (d) {
                return 'nivo_calendar_day nivo_calendar_day-month-' + d.date.getMonth();
            }).attr('width', function (d) {
                return d.size;
            }).attr('height', function (d) {
                return d.size;
            }).attr('x', 0).attr('y', 0).style({
                opacity: 0,
                fill: function fill(d) {
                    return d.color;
                },
                stroke: dayBorderColor,
                'stroke-width': dayBorderWidth
            }).on('click', function (d) {
                return onDayClick(d);
            });

            dayNodes.transition().duration(transitionDuration).ease(transitionEasing).delay(function (d) {
                return _d2.default.time.dayOfYear(d.date) * transitionStaggering;
            }).attr('width', function (d) {
                return d.size;
            }).attr('height', function (d) {
                return d.size;
            }).attr('x', function (d) {
                return d.x;
            }).attr('y', function (d) {
                return d.y;
            }).style({
                opacity: 1,
                fill: function fill(d) {
                    return d.color;
                },
                stroke: dayBorderColor,
                'stroke-width': dayBorderWidth
            });

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Months
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            var monthPaths = wrapper.selectAll('.nivo_calendar_month').data(months, function (d) {
                return d.date;
            });

            monthPaths.enter().append('path').attr('class', 'nivo_calendar_month').style({
                opacity: 0,
                fill: 'none',
                stroke: monthBorderColor,
                'stroke-width': monthBorderWidth
            }).attr('d', function (d) {
                return d.path;
            });

            monthPaths.transition().duration(transitionDuration).ease(transitionEasing).delay(function (d) {
                return (d.date.getMonth() + 1) * 30 * transitionStaggering;
            }).style({
                opacity: 1,
                stroke: monthBorderColor,
                'stroke-width': monthBorderWidth
            }).attr('d', function (d) {
                return d.path;
            });

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Month legends
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            var monthLegends = wrapper.selectAll('.nivo_calendar_month_legend').data(months, function (d) {
                return d.date;
            });
            var monthLegendFormat = _d2.default.time.format('%b');

            monthLegends.enter().append('text').classed('nivo_calendar_month_legend', true).text(function (d) {
                return monthLegendFormat(d.date);
            }).attr('text-anchor', 'middle').attr('transform', function (d) {
                if (direction === _directions.DIRECTION_HORIZONTAL) {
                    return 'translate(' + (d.bbox.x + d.bbox.width / 2) + ',' + (d.bbox.y - monthLegendOffset) + ')';
                }

                return 'translate(' + (d.bbox.x - monthLegendOffset) + ',' + (d.bbox.y + d.bbox.height / 2) + ') rotate(-90)';
            }).style('opacity', 0);

            monthLegends.transition().duration(transitionDuration).ease(transitionEasing).delay(function (d) {
                return (d.date.getMonth() + 1) * 30 * transitionStaggering;
            }).attr('transform', function (d) {
                if (direction === _directions.DIRECTION_HORIZONTAL) {
                    return 'translate(' + (d.bbox.x + d.bbox.width / 2) + ',' + (d.bbox.y - monthLegendOffset) + ')';
                }

                return 'translate(' + (d.bbox.x - monthLegendOffset) + ',' + (d.bbox.y + d.bbox.height / 2) + ') rotate(-90)';
            }).style('opacity', 1);

            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            // Year legends
            // —————————————————————————————————————————————————————————————————————————————————————————————————————————————
            var yearLegends = wrapper.selectAll('.nivo_calendar_year_legend').data(years);

            var yearLabelRotation = direction === _directions.DIRECTION_HORIZONTAL ? -90 : 0;

            yearLegends.enter().append('text').text(function (d) {
                return d.year;
            }).classed('nivo_calendar_year_legend', true).attr('text-anchor', 'middle').attr('transform', function (d) {
                if (direction === _directions.DIRECTION_HORIZONTAL) {
                    return 'translate(' + (d.bbox.x - yearLegendOffset) + ',' + (d.bbox.y + d.bbox.height / 2) + ') rotate(-90)';
                }

                return 'translate(' + (d.bbox.x + d.bbox.width / 2) + ',' + (d.bbox.y - yearLegendOffset) + ')';
            });

            yearLegends.transition().duration(transitionDuration).ease(transitionEasing).attr('transform', function (d) {
                if (direction === _directions.DIRECTION_HORIZONTAL) {
                    return 'translate(' + (d.bbox.x - yearLegendOffset) + ',' + (d.bbox.y + d.bbox.height / 2) + ') rotate(-90)';
                }

                return 'translate(' + (d.bbox.x + d.bbox.width / 2) + ',' + (d.bbox.y - yearLegendOffset) + ')';
            });
        }
    }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
            this.calendarLayout = (0, _CalendarLayout2.default)();
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {
            this.renderD3(nextProps, nextState);

            return false;
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.renderD3(this.props, this.state);
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'svg',
                { className: 'nivo_calendar' },
                _react2.default.createElement('g', { className: 'nivo_calendar_wrapper' })
            );
        }
    }]);

    return CalendarD3;
}(_react.Component);

CalendarD3.propTypes = _lodash2.default.omit(_CalendarProps.calendarPropTypes, ['enableMotion', 'motionStiffness', 'motionDamping']);

CalendarD3.defaultProps = _lodash2.default.omit(_CalendarProps.calendarDefaultProps, ['enableMotion', 'motionStiffness', 'motionDamping']);

exports.default = CalendarD3;