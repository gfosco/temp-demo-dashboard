/*
 * This file is part of the nivo project.
 *
 * (c) 2016 RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Nivo = require('../../../Nivo');

var _Nivo2 = _interopRequireDefault(_Nivo);

var _PropTypes = require('../../../PropTypes');

var _ColorUtils = require('../../../ColorUtils');

var _d = require('d3');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Chord = function (_Component) {
    _inherits(Chord, _Component);

    function Chord() {
        _classCallCheck(this, Chord);

        return _possibleConstructorReturn(this, (Chord.__proto__ || Object.getPrototypeOf(Chord)).apply(this, arguments));
    }

    _createClass(Chord, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                data = _props.data,
                _margin = _props.margin,
                _width = _props.width,
                _height = _props.height,
                padAngle = _props.padAngle,
                innerRadiusRatio = _props.innerRadiusRatio,
                innerRadiusOffset = _props.innerRadiusOffset,
                ribbonOpacity = _props.ribbonOpacity,
                ribbonBorderWidth = _props.ribbonBorderWidth,
                arcOpacity = _props.arcOpacity,
                arcBorderWidth = _props.arcBorderWidth,
                colors = _props.colors;


            var color = (0, _ColorUtils.getColorRange)(colors);

            var margin = Object.assign({}, _Nivo2.default.defaults.margin, _margin);
            var width = _width - margin.left - margin.right;
            var height = _height - margin.top - margin.bottom;
            var radius = Math.min(width, height) / 2;
            var arcInnerRadius = radius * innerRadiusRatio;
            var ribbonRadius = radius * (innerRadiusRatio - innerRadiusOffset);

            var chord = (0, _d.chord)().padAngle(padAngle);

            var arc = (0, _d.arc)().innerRadius(arcInnerRadius).outerRadius(radius);

            var ribbon = (0, _d.ribbon)().radius(ribbonRadius);

            var ribbons = chord(data);
            var arcs = ribbons.groups;

            return _react2.default.createElement(
                'svg',
                { xmlns: 'http://www.w3.org/2000/svg', className: 'nivo_chord', width: _width, height: _height },
                _react2.default.createElement(
                    'g',
                    {
                        className: 'nivo_chord_wrapper',
                        transform: 'translate(' + _width / 2 + ',' + _height / 2 + ')'
                    },
                    _react2.default.createElement(
                        'g',
                        { className: 'nivo_chord_ribbons' },
                        ribbons.map(function (d) {
                            var c = (0, _d.rgb)(color(d.source.index));
                            c = (0, _d.rgb)(c.r, c.g, c.b, ribbonOpacity);

                            return _react2.default.createElement('path', {
                                key: 'ribbon.' + d.source.index + '.' + d.target.index,
                                className: 'nivo_chord_ribbon',
                                d: ribbon(d),
                                fill: c,
                                stroke: c,
                                strokeWidth: ribbonBorderWidth
                            });
                        })
                    ),
                    _react2.default.createElement(
                        'g',
                        { className: 'nivo_chord_arcs' },
                        arcs.map(function (d) {
                            var c = (0, _d.rgb)(color(d.index));
                            c = (0, _d.rgb)(c.r, c.g, c.b, arcOpacity);

                            return _react2.default.createElement('path', {
                                key: 'arc.' + d.index,
                                className: 'nivo_chord_arc',
                                d: arc(d),
                                fill: c,
                                stroke: c,
                                strokeWidth: arcBorderWidth
                            });
                        })
                    )
                )
            );
        }
    }]);

    return Chord;
}(_react.Component);

Chord.propTypes = {
    data: _react.PropTypes.array.isRequired,
    // dimensions
    width: _react.PropTypes.number.isRequired,
    height: _react.PropTypes.number.isRequired,
    margin: _PropTypes.margin,

    padAngle: _react.PropTypes.number.isRequired,
    innerRadiusRatio: _react.PropTypes.number.isRequired,
    innerRadiusOffset: _react.PropTypes.number.isRequired,

    ribbonOpacity: _react.PropTypes.number.isRequired,
    ribbonBorderWidth: _react.PropTypes.number.isRequired,

    // colors
    colors: _react.PropTypes.any.isRequired
};

Chord.defaultProps = {
    // dimensions
    margin: _Nivo2.default.defaults.margin,

    padAngle: 0,
    innerRadiusRatio: 0.9,
    innerRadiusOffset: 0,

    ribbonOpacity: 0.5,
    ribbonBorderWidth: 1,

    arcOpacity: 1,
    arcBorderWidth: 1,

    // colors
    colors: _Nivo2.default.defaults.colorRange
};

exports.default = Chord;