/*
 * This file is part of the nivo project.
 *
 * (c) RaphaÃ«l Benitte
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _ArcUtils = require('../../../ArcUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RadialStackRadiusAxis = function (_Component) {
    _inherits(RadialStackRadiusAxis, _Component);

    function RadialStackRadiusAxis() {
        _classCallCheck(this, RadialStackRadiusAxis);

        return _possibleConstructorReturn(this, (RadialStackRadiusAxis.__proto__ || Object.getPrototypeOf(RadialStackRadiusAxis)).apply(this, arguments));
    }

    _createClass(RadialStackRadiusAxis, [{
        key: 'render',
        value: function render() {
            (0, _invariant2.default)(false, '<RadialStackRadiusAxis> element is for Radial components configuration only and should not be rendered');
        }
    }], [{
        key: 'decorateRadialStack',
        value: function decorateRadialStack(_ref) {
            var angleData = _ref.props.angleData;


            var axis = _d2.default.svg.axis();

            return function (_ref2) {
                var element = _ref2.element,
                    angle = _ref2.angle,
                    radius = _ref2.radius,
                    transitionDuration = _ref2.transitionDuration,
                    transitionEasing = _ref2.transitionEasing;

                var wrapper = _d2.default.select('.nivo_radial-stack_radius-axis-' + angleData);
                if (wrapper.node() === null) {
                    wrapper = element.append('g').attr('class', 'nivo_radial-stack_radius-axis nivo_radial-stack_radius-axis-' + angleData);
                }

                // copy original scale
                var scale = radius.copy();
                axis.scale(scale).ticks(3);

                wrapper.attr('transform', function (d) {
                    return 'rotate(' + (0, _ArcUtils.radiansToDegrees)(angle(angleData)) + ')';
                });

                wrapper.transition().duration(transitionDuration).ease(transitionEasing).call(axis);
            };
        }
    }]);

    return RadialStackRadiusAxis;
}(_react.Component);

var any = _react.PropTypes.any;


RadialStackRadiusAxis.propTypes = {
    angleData: any.isRequired
};

RadialStackRadiusAxis.defaultProps = {};

exports.default = RadialStackRadiusAxis;