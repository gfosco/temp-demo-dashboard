'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _ui = require('mozaik/ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Repository = function (_Component) {
    _inherits(Repository, _Component);

    function Repository() {
        _classCallCheck(this, Repository);

        return _possibleConstructorReturn(this, (Repository.__proto__ || Object.getPrototypeOf(Repository)).apply(this, arguments));
    }

    _createClass(Repository, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                owner = _props.owner,
                repository = _props.repository,
                title = _props.title,
                repoInfo = _props.apiData,
                apiError = _props.apiError;
            var theme = this.context.theme;


            var body = _react2.default.createElement(_ui.WidgetLoader, null);
            var ref = void 0;
            if (repoInfo) {
                ref = '#' + repoInfo.last_build_number;

                var icon = 'question';
                var color = theme.colors.unknown;
                if (repoInfo.last_build_state === 'passed') {
                    icon = 'check';
                    color = theme.colors.success;
                } else if (repoInfo.last_build_state === 'started') {
                    icon = 'play';
                } else if (repoInfo.last_build_state === 'failed') {
                    icon = 'warning';
                    color = theme.colors.failure;
                }

                var wrapperStyle = {
                    display: 'flex',
                    flexDirection: 'column'
                };

                body = _react2.default.createElement(
                    'div',
                    { style: { margin: '1.2vmin 1.8vmin' } },
                    _react2.default.createElement(
                        'div',
                        { style: { marginBottom: '2vmin' } },
                        repoInfo.description
                    ),
                    _react2.default.createElement(
                        'div',
                        { style: wrapperStyle },
                        _react2.default.createElement(_ui.WidgetLabel, {
                            label: 'last build',
                            prefix: _react2.default.createElement('i', { className: 'fa fa-' + icon, style: { color: color } }),
                            style: { marginBottom: '2vmin' }
                        }),
                        _react2.default.createElement(_ui.WidgetLabel, {
                            label: _react2.default.createElement(
                                'span',
                                null,
                                'last build\xA0',
                                _react2.default.createElement(
                                    'span',
                                    { className: 'prop__value' },
                                    (0, _moment2.default)(repoInfo.last_build_started_at).fromNow()
                                )
                            ),
                            prefix: _react2.default.createElement('i', { className: 'fa fa-clock-o' }),
                            suffix: _react2.default.createElement(
                                'span',
                                null,
                                'in ',
                                _react2.default.createElement(
                                    'span',
                                    { className: 'count' },
                                    repoInfo.last_build_duration,
                                    's'
                                )
                            ),
                            style: { marginBottom: '2vmin' }
                        }),
                        _react2.default.createElement(_ui.WidgetLabel, {
                            label: 'language',
                            prefix: _react2.default.createElement('i', { className: 'fa fa-code' }),
                            suffix: repoInfo.github_language ? repoInfo.github_language : 'n/a'
                        })
                    )
                );
            }

            return _react2.default.createElement(
                _ui.Widget,
                null,
                _react2.default.createElement(_ui.WidgetHeader, {
                    title: title || '',
                    subject: title ? null : owner + '/' + repository,
                    count: ref,
                    icon: 'bug'
                }),
                _react2.default.createElement(
                    _ui.WidgetBody,
                    null,
                    _react2.default.createElement(
                        _ui.TrapApiError,
                        { error: apiError },
                        body
                    )
                )
            );
        }
    }], [{
        key: 'getApiRequest',
        value: function getApiRequest(_ref) {
            var owner = _ref.owner,
                repository = _ref.repository;

            return {
                id: 'travis.repository.' + owner + '.' + repository,
                params: { owner: owner, repository: repository }
            };
        }
    }]);

    return Repository;
}(_react.Component);

Repository.propTypes = {
    owner: _react.PropTypes.string.isRequired,
    repository: _react.PropTypes.string.isRequired,
    title: _react.PropTypes.string,
    apiError: _react.PropTypes.object,
    apiData: _react.PropTypes.shape({
        last_build_number: _react.PropTypes.string,
        last_build_state: _react.PropTypes.string,
        last_build_started_at: _react.PropTypes.string,
        last_build_duration: _react.PropTypes.number,
        slug: _react.PropTypes.string.isRequired,
        description: _react.PropTypes.string.isRequired,
        github_language: _react.PropTypes.string
    })
};
Repository.contextTypes = {
    theme: _react.PropTypes.object.isRequired
};
exports.default = Repository;