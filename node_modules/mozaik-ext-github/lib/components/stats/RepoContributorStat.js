'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ui = require('mozaik/ui');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RepoContributorStat = function (_Component) {
    _inherits(RepoContributorStat, _Component);

    function RepoContributorStat() {
        _classCallCheck(this, RepoContributorStat);

        return _possibleConstructorReturn(this, (RepoContributorStat.__proto__ || Object.getPrototypeOf(RepoContributorStat)).apply(this, arguments));
    }

    _createClass(RepoContributorStat, [{
        key: 'render',
        value: function render() {
            var _props$contributor = this.props.contributor,
                author = _props$contributor.author,
                total = _props$contributor.total;


            return _react2.default.createElement(_ui.WidgetListItem, {
                title: _react2.default.createElement(
                    'a',
                    { href: author.html_url, target: '_blank' },
                    author.login
                ),
                pre: _react2.default.createElement(
                    _ui.WidgetAvatar,
                    { size: '4vmin' },
                    _react2.default.createElement('img', { src: author.avatar_url, alt: author.login })
                ),
                post: _react2.default.createElement(
                    'span',
                    null,
                    total,
                    '\xA0',
                    _react2.default.createElement('i', { className: 'fa fa-dot-circle-o' })
                )
            });
        }
    }]);

    return RepoContributorStat;
}(_react.Component);

RepoContributorStat.propTypes = {
    contributor: _react.PropTypes.shape({
        total: _react.PropTypes.number.isRequired,
        author: _react.PropTypes.shape({
            login: _react.PropTypes.string.isRequired,
            avatar_url: _react.PropTypes.string.isRequired
        }).isRequired
    }).isRequired
};
exports.default = RepoContributorStat;