'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _nivo = require('nivo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var margin = { top: 20, right: 30, bottom: 40, left: 60 };

var RepoCommitActivityHistogramChart = function (_Component) {
    _inherits(RepoCommitActivityHistogramChart, _Component);

    function RepoCommitActivityHistogramChart() {
        _classCallCheck(this, RepoCommitActivityHistogramChart);

        return _possibleConstructorReturn(this, (RepoCommitActivityHistogramChart.__proto__ || Object.getPrototypeOf(RepoCommitActivityHistogramChart)).apply(this, arguments));
    }

    _createClass(RepoCommitActivityHistogramChart, [{
        key: 'render',
        value: function render() {
            var commits = this.props.commits;
            var theme = this.context.theme;


            return _react2.default.createElement(
                _nivo.ResponsiveChart,
                { margin: margin, data: commits, theme: theme.charts },
                _react2.default.createElement(_nivo.Scale, { id: 'commits', dataKey: 'total', type: 'linear', axis: 'y' }),
                _react2.default.createElement(_nivo.Scale, { id: 'week', dataKey: 'week', type: 'band', axis: 'x', padding: 0.2 }),
                _react2.default.createElement(_nivo.Grid, { yScale: 'commits' }),
                _react2.default.createElement(_nivo.Axis, {
                    scaleId: 'commits',
                    position: 'left',
                    legend: 'commits',
                    legendPosition: 'center',
                    legendOffset: -40
                }),
                _react2.default.createElement(_nivo.Axis, { scaleId: 'week', axis: 'x', position: 'bottom' }),
                _react2.default.createElement(_nivo.Bars, { xScale: 'week', x: 'week', yScale: 'commits', y: 'total', color: '#fff' })
            );
        }
    }]);

    return RepoCommitActivityHistogramChart;
}(_react.Component);

RepoCommitActivityHistogramChart.propTypes = {
    commits: _react.PropTypes.array.isRequired
};
RepoCommitActivityHistogramChart.contextTypes = {
    theme: _react.PropTypes.object.isRequired
};
exports.default = RepoCommitActivityHistogramChart;